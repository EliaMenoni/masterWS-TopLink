### Richiesta per TEST OK 1
POST http://{{host}}:{{port}}/LDO/compose/
Content-Type: application/json

< ../test_generator/OK/Test1/test.json
>> ./RESPONSE/OK/test1.xml

> {%
client.test("Request executed successfully", function() {
  client.global.set("error_test_regex", /ERROR/g);
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("No Error Found", function() {
    const regex = client.global.get("error_test_regex");
    if(response.body.match(regex) != null) {
        client.log("Found " + (response.body.match(regex).length/3).toString() + " errors BLOCK");
    }
    client.assert(response.body.match(regex) == null, "Found some ERROR");
});
%}

### Richiesta per TEST OK 2
POST http://{{host}}:{{port}}/LDO/compose/
Content-Type: application/json

< ../test_generator/OK/Test2/test.json
>> ./RESPONSE/OK/test2.xml

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("No Error Found", function() {
    const regex = client.global.get("error_test_regex");
    if(response.body.match(regex) != null) {
        client.log("Found " + (response.body.match(regex).length/3).toString() + " errors BLOCK");
    }
    client.assert(response.body.match(regex) == null, "Found some ERROR");
});
%}

### Richiesta per TEST OK 3
POST http://{{host}}:{{port}}/LDO/compose/
Content-Type: application/json

< ../test_generator/OK/Test3/test.json
>> ./RESPONSE/OK/test3.xml

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("No Error Found", function() {
    const regex = client.global.get("error_test_regex");
    if(response.body.match(regex) != null) {
        client.log("Found " + (response.body.match(regex).length/3).toString() + " errors BLOCK");
    }
    client.assert(response.body.match(regex) == null, "Found some ERROR");
});
%}

### Richiesta per TEST OK 4
POST http://{{host}}:{{port}}/LDO/compose/
Content-Type: application/json

< ../test_generator/OK/Test4/test.json
>> ./RESPONSE/OK/test4.xml

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("No Error Found", function() {
    const regex = client.global.get("error_test_regex");
    if(response.body.match(regex) != null) {
        client.log("Found " + (response.body.match(regex).length/3).toString() + " errors BLOCK");
    }
    client.assert(response.body.match(regex) == null, "Found some ERROR");
});
%}